
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
    output = "/home/ubuntu/enlightened_beauty_website/node_modules/.prisma/client"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model QuizResult {
  id          String   @id @default(cuid())
  email       String
  name        String?
  archetype   String
  answers     Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("quiz_results")
}

model EmailSubscriber {
  id          String   @id @default(cuid())
  email       String   @unique
  name        String?
  source      String?  // quiz, newsletter, course, etc.
  tags        String[] // for segmentation
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("email_subscribers")
}

model Course {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  description String
  price       Decimal
  image       String?
  isActive    Boolean  @default(true)
  modules     Json?    // course modules data
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("courses")
}

model Product {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  description String
  price       Decimal
  image       String?
  category    String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("products")
}

model BlogPost {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  excerpt     String?
  content     String
  image       String?
  category    String
  tags        String[]
  isPublished Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("blog_posts")
}

model ContactSubmission {
  id        String   @id @default(cuid())
  name      String
  email     String
  subject   String?
  message   String
  createdAt DateTime @default(now())

  @@map("contact_submissions")
}
