"use strict";(()=>{var e={};e.id=727,e.ids=[727],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1202:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>b,patchFetch:()=>h,requestAsyncStorage:()=>d,routeModule:()=>c,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m});var s={};t.r(s),t.d(s,{POST:()=>l,dynamic:()=>p});var a=t(921),i=t(7380),n=t(4185),u=t(3878),o=t(2334);let p="force-dynamic";async function l(e){try{let{email:r,name:t,source:s,tags:a}=await e.json();if(!r)return u.NextResponse.json({error:"Email is required"},{status:400});let i=await o._.emailSubscriber.findUnique({where:{email:r}});if(i){let e=await o._.emailSubscriber.update({where:{email:r},data:{name:t||i.name,source:s||i.source,tags:a?Array.from(new Set([...i.tags,...a])):i.tags,isActive:!0,updatedAt:new Date}});return u.NextResponse.json({message:"Subscription updated successfully",subscriber:e})}let n=await o._.emailSubscriber.create({data:{email:r,name:t||null,source:s||"website",tags:a||[],isActive:!0}});return u.NextResponse.json({message:"Subscription successful",subscriber:n})}catch(e){return console.error("Email signup error:",e),u.NextResponse.json({error:"Internal server error"},{status:500})}}let c=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/email-signup/route",pathname:"/api/email-signup",filename:"route",bundlePath:"app/api/email-signup/route"},resolvedPagePath:"/home/ubuntu/enlightened_beauty_website/app/app/api/email-signup/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:d,staticGenerationAsyncStorage:m,serverHooks:g}=c,b="/api/email-signup/route";function h(){return(0,n.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:m})}},2334:(e,r,t)=>{t.d(r,{_:()=>a});let s=require("@prisma/client"),a=globalThis.prisma??new s.PrismaClient}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[923,146],()=>t(1202));module.exports=s})();