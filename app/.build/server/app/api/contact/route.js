"use strict";(()=>{var e={};e.id=386,e.ids=[386],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5159:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>h,patchFetch:()=>g,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>b,staticGenerationAsyncStorage:()=>m});var a={};r.r(a),r.d(a,{POST:()=>p,dynamic:()=>c});var n=r(921),o=r(7380),s=r(4185),i=r(3878),u=r(2334);let c="force-dynamic";async function p(e){try{let{name:t,email:r,subject:a,message:n}=await e.json();if(!t||!r||!n)return i.NextResponse.json({error:"Name, email, and message are required"},{status:400});let o=await u._.contactSubmission.create({data:{name:t,email:r,subject:a||"General Inquiry",message:n}});try{await u._.emailSubscriber.upsert({where:{email:r},update:{name:t,isActive:!0,updatedAt:new Date},create:{email:r,name:t,source:"contact_form",tags:["contact_form"],isActive:!0}})}catch(e){console.error("Error updating email subscriber:",e)}return i.NextResponse.json({message:"Contact form submitted successfully",submission:o})}catch(e){return console.error("Contact form error:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}let d=new n.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/contact/route",pathname:"/api/contact",filename:"route",bundlePath:"app/api/contact/route"},resolvedPagePath:"/home/ubuntu/enlightened_beauty_website/app/app/api/contact/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:l,staticGenerationAsyncStorage:m,serverHooks:b}=d,h="/api/contact/route";function g(){return(0,s.patchFetch)({serverHooks:b,staticGenerationAsyncStorage:m})}},2334:(e,t,r)=>{r.d(t,{_:()=>n});let a=require("@prisma/client"),n=globalThis.prisma??new a.PrismaClient}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[923,146],()=>r(5159));module.exports=a})();